on: { push: { branches: [master] } }

jobs:
  build:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Get code
        uses: actions/checkout@v2
      - name: Setup environment
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Build binary
        run: |
          cargo --version
          cargo build --release
          ls -l ./
          ls -l ./target/release/
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # This pulls from the CREATE RELEASE step above,
      #     # referencing it's ID to get its outputs object,
      #     # which include a `upload_url`.
      #     # See this blog post for more info:
      #     # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} 
      #     asset_path: ./target/release/reversi_bot
      #     asset_name: reversi_bot_win64.zip
      #     asset_content_type: application/zip
