on: { push: { branches: [master] } }

jobs:
  build:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Get code
        uses: actions/checkout@v2

      - name: Setup environment
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: Build binary
        id: build-bin
        run: cargo build --release

      - name: Get version
        id: get-version
        run: echo "::set-output name=bin_version::$(cargo run --release -- -v)"

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.bin_version }}
          draft: false
          prerelease: false

      - name: Upload Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} 
          asset_path: .\target\release\reversi_bot.exe
          asset_name: reversi_bot_win64.exe
          asset_content_type: application/zip
